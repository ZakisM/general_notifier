name: Build and Deploy images

on:
  push:
    paths-ignore:
      - 'README.md'
    branches: [ master ]

jobs:
  - build-and-push-general-notifier:
      name: Build and Deploy general-notifier
      runs-on: ubuntu-latest
      env:
        SQLX_OFFLINE: true
      steps:
        - uses: actions/checkout@v2
        - name: Download Sqlite3
          run: sudo apt-get install libsqlite3-dev
        - name: Run tests
          run: cargo test --verbose
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1.3.0
        - name: Login to DockerHub
          uses: docker/login-action@v1.9.0
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        - name: Build and Push to Docker
          uses: docker/build-push-action@v2.5.0
          with:
            file: ./Dockerfile
            push: true
            cache-from: type=registry,ref=zakism/general-notifier:latest
            cache-to: type=inline
            tags: zakism/general-notifier:latest
  - build-and-push-general-notifier-playwright:
      name: Build and Deploy general-notifier-playwright
      runs-on: ubuntu-latest
      permissions:
        contents: read
        packages: write
      steps:
        - name: Checkout repository
          uses: actions/checkout@v4
        - name: Log in to the Container registry
          uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
          with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GHCR_PASSWORD }}
        - name: Extract metadata (tags, labels) for Docker
          id: meta
          uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
          with:
            images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        - name: Build and push Docker image
          uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
          with:
            context: ./playwright_bridge
            push: true
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}
